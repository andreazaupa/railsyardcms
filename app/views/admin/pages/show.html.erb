<%= content_for :title do %><%= t('admin.pages.manage_contents', :title => @page.title) %><% end %>

<header class="page_description">
    <h2><%= t('admin.pages.manage_contents', :title => @page.title) %> [<%= @page.lang %>]</h2>
</header>

<%= render :partial => "available_areas", :locals => {:current_layout => @current_layout, :snippets => @snippets} %>

<%= render :partial => "layout_selector", :locals => {:current_layout => @current_layout, :layouts => @layouts} %>

<%= render :partial => "available_snippets", :locals => {:snippets_available => @snippets_available} %>

<script type="text/javascript">
$(document).ready(function() {
       
    // This sets the unique id to the cloned snippet
    // WARNING this function runs two times.. still wondering why. TO-DO fix it running just one time
    // Drag and drop of snippets to areas
    // drag_item(s) are the 'source' snippets on the right, items available to be dropped inside areas. drag_source is the container.
    $('.drag_item','.drag_source').draggable({ // This means every drag_item inside drag_source
        handle:'.grabber',  // The element which is used to 'grab' the item
        items:'div.wrap', // The item to be sorted when grabbed!
        connectToSortable: '.drop_target', // Link to the drop destination
        helper:'clone' // Clone the item when dragged instead of moving it
    });
    
    // This sets the unique id to the cloned snippet
    $('.drop_target').livequery(function(){
         $(this).droppable("destroy");
         $(this).droppable({
              drop: function(event, ui) {
                  var dropped = ui.draggable;
                  if (dropped.hasClass('drag_item')){ // ui.draggable is the dragged item just dropped
                    time = new Date().getTime();
                    newid = dropped.attr('id') + '%' + time;
                    dropped.removeClass("drag_item");
                    dropped.attr('id', newid);
                    dropped.removeClass("available_widget");
                  };
              }
         });
    });
    
    // Provides both the creation and the sorting of snippets, submitting the list of snippets present in every area
    $('.drop_target').sortable({
        items:'.sortable_item',
        forceHelperSize:true,
        placeholder: 'dashed_placeholder',        
        forcePlaceholderSize:true,
        connectWith: '.drop_target',
        stop: function(event, ui){
            var sortorder={};
            $('.drop_target').each(function(){
                var itemorder=$(this).sortable('toArray');
                var targetId=$(this).attr('id');
                sortorder[targetId] = itemorder.toString();
            });
            $.ajax({
                type: 'put',
                url: '<%= sort_admin_page_snippets_path(@page) %>',
                data: ({'areas':sortorder}),
                // complete: function(response) {
                //     console.debug(response);
                // }
            });
        } 
    });
    
    $("#layout_form").change(function () {
        var selection = "";
        $("#layout_form option:selected").each(function () {
            selection += $(this).attr('value');
        });
        if (confirm('<%= t("admin.layouts.layout_change_confirm") %>'))
            $.ajax({
                type: "put",
                url: '<%= apply_layout_admin_page_path(@page) %>',
                data: "selected_layout="+selection,
                // success: function(response) {
                //     console.debug(response);
                // }
            });
        return false;
    });

}); // $(document).ready()
</script>
